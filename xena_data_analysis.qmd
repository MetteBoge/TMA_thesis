---
title: "xena_data_analysis"
format: html
editor: visual
---

## Load packages and targets

```{r}
library(tidyverse)
library(R.utils)
```

```{r}
target_list <- c("CD274", "PDCD1LG2", "IDO1", "TDO2", "ARG1", "ARG2", "TGFB1", "CCL22", "CCL2", "LGALS3","LRRC32", "IL10", "SIGLEC15", "BIRC7")

```

## Download data

```{r}
# Cohort:
cohort = "TCGA_PANCAN"
file_path <- "C:/Users/Mette/OneDrive - Danmarks Tekniske Universitet/11. Semester Speciale/Data/Xena/"
dir.create(file_path, showWarnings = FALSE, recursive = TRUE)
```

```{r}
## Data
data_type = "gene_expression_RNAseq_tpm"

# Specify the URL of the file you want to download
url <- "https://toil-xena-hub.s3.us-east-1.amazonaws.com/download/tcga_RSEM_gene_tpm.gz"

# Specify the file name and location where you want to save the file on your computer
file_name_data <- paste0(cohort, "_", data_type)

options(timeout=1000)
if (!(file.exists(paste(file_path, file_name_data, ".tsv.gz", sep = "")) | 
        file.exists(paste(file_path, file_name_data, ".tsv", sep = "")))){
  # Call the download.file() function, passing in the URL and file name/location as arguments
  download.file(url, paste(file_path, file_name_data, ".tsv.gz", sep = ""), mode = "wb")
}

if (!(file.exists(paste(file_path, file_name_data, ".tsv", sep = "")))){
  gunzip(paste(file_path, file_name_data, ".tsv.gz", sep = ""))
}
```

```{r}
## sampleType_primaryDisease
data_type = "sampleType_primaryDisease"

# Specify the URL of the file you want to download
url <- "https://tcga-pancan-atlas-hub.s3.us-east-1.amazonaws.com/download/TCGA_phenotype_denseDataOnlyDownload.tsv.gz"

# Specify the file name and location where you want to save the file on your computer
file_name_pheno1 <- paste0(cohort, "_", data_type)

# Call the download.file() function, passing in the URL and file name/location as arguments
if (!(file.exists(paste(file_path, file_name_pheno1, ".tsv.gz", sep = "")) | 
        file.exists(paste(file_path, file_name_pheno1, ".tsv", sep = "")))){
  download.file(url, paste(file_path, file_name_pheno1, ".tsv", sep = ""), mode = "wb")
}
if (!(file.exists(paste(file_path, file_name_pheno1, ".tsv", sep = "")))){
  gunzip(paste(file_path, file_name_pheno1, ".tsv.gz", sep = ""))
}
```

```{r}
df_data <- read.csv(paste(file_path, file_name_data, ".tsv", sep = ""),sep = "\t")
df_st_pd <- read.csv(paste(file_path, file_name_pheno1, ".tsv", sep = ""),sep = "\t")

# Change format of colnames to have "-" instead of ".":
colnames(df_data) <- gsub("\\.", "-", colnames(df_data))
```

### Subset and wrangle data

```{r}
geneName_ensg <- read_csv("C:/Users/Mette/OneDrive - Danmarks Tekniske Universitet/11. Semester Speciale/Data/targets_ensg.csv")
geneName_ensg <- geneName_ensg %>% 
  rename(gene_ensg_shrt = converted_alias) %>% 
  select(name, gene_ensg_shrt)
geneName_ensg
```

```{r}

cancer_types_list <- c("skin cutaneous melanoma",
  "acute myeloid leukemia",
  "cholangiocarcinoma",
  "pancreatic adenocarcinoma",
  "head & neck squamous cell carcinoma",
  "breast invasive carcinoma",
  "lung squamous cell carcinoma",
  "diffuse large B-cell lymphoma",
  "cervical & endocervical cancer")

cancer_type <- "pancreatic adenocarcinoma"

df_st_pd_2 <- df_st_pd %>% 
  filter(X_primary_disease %in% cancer_type &
           sample %in% colnames(df_data)) 

df_subdata <- df_data %>% 
  dplyr::select(sample, unlist(df_st_pd_2["sample"], use.names = FALSE)) %>% 
  mutate(gene_ensg_shrt = gsub("\\..*", "", sample)) %>% 
  relocate(sample, gene_ensg_shrt)

df_st_pd_2
```

```{r}
df_subdata_2 <- df_subdata %>% 
  mutate(gene_ensg_shrt = gsub("\\..*", "", sample)) %>% 
  full_join(geneName_ensg, by="gene_ensg_shrt") %>% 
  relocate(sample, gene_ensg_shrt, name) %>% 
  filter(!(is.na(name)))

df_subdata_2
```

## Adjust for cell type

```{r}
#install.packages("C:/Users/Mette/OneDrive - Danmarks Tekniske Universitet/11. Semester Speciale/code_space/immunedeconv-master/immunedeconv-master/", repos = NULL, type = "source")

library(immunedeconv)
library(tidyverse)
library(biomaRt)
library(knitr)
```

```{r}
# Change ENSG to gene names: 
mart <- useDataset("hsapiens_gene_ensembl", useMart("ensembl"))
genes <- df_subdata$gene_ensg_shrt

G_list <- getBM(filters= "ensembl_gene_id", attributes= c("ensembl_gene_id","hgnc_symbol"),values=genes,mart= mart)


df_subdata <- df_subdata %>% 
  left_join(G_list, by = c("gene_ensg_shrt"="ensembl_gene_id")) %>% 
  relocate(sample, gene_ensg_shrt, hgnc_symbol) %>% 
  filter(!(is.na(hgnc_symbol)) & nchar(hgnc_symbol) > 0) %>% 
  distinct(hgnc_symbol, .keep_all = TRUE) # Keep only ONE of duplicated genes 

# Change genes to gowdames
df_subdata %>% 
  distinct(hgnc_symbol, .keep_all = TRUE) 
```

Use ESTIMATE to compute a score for tumoral, immune and stromal components and the fraction of tumor purity

```{r}
gExp_mat_subdata <- df_subdata %>% 
  dplyr::select(-c("sample", "gene_ensg_shrt")) %>% 
  column_to_rownames(var = "hgnc_symbol") %>% 
  as.matrix() 

estimate_PAAD <- deconvolute_estimate(gExp_mat_subdata)

quantiseq_PAAD <- immunedeconv::deconvolute(gExp_mat_subdata, method = "quantiseq")
```

### Plots and tables

```{r}
# Boxplot of estimates
estimate_PAAD |>
  rownames_to_column(var = "estimates") |>
  pivot_longer(cols = -estimates,
               names_to = "sample",
               values_to = "scores") |>
  ggplot(aes(x=estimates, y=scores)) + 
  geom_boxplot() 
```

```{r}
#set_cibersort_binary(path)

knitr::kable(quantiseq_PAAD, digits = 2)
```

## Phenotypic relations, cancer specific

Take gene_exp data used from before and load in the phenotype data for the studies. Load survival data as well.

One study at a time, look at gene expression of targets and correlation to phenotypes.

```{r}
devtools::install_github("omnideconv/immunedeconv")#, method = "libcurl")
```

### Download phenotype and survival data

```{r}
file_path <- "C:/Users/Mette/OneDrive - Danmarks Tekniske Universitet/11. Semester Speciale/Data/Xena/"
dir.create(file_path, showWarnings = FALSE, recursive = TRUE)
 
data_type = "phenotype"

url_phenotype_list <- c("https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LAML.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-CHOL.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-CESC.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-DLBC.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-HNSC.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-BRCA.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-PAAD.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-SKCM.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUAD.GDC_phenotype.tsv.gz",
                        "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUSC.GDC_phenotype.tsv.gz"
              )

url_survival_list <- c("https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LAML.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-CHOL.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-CESC.survival.tsv", 
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-DLBC.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-HNSC.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-BRCA.survival.tsv", 
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-PAAD.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-SKCM.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUAD.survival.tsv",
                       "https://gdc-hub.s3.us-east-1.amazonaws.com/download/TCGA-LUSC.survival.tsv"
              )
cohort_list <- c("TCGA_LAML",
                 "TCGA_CHOL",
                 "TCGA_CESC",
                 "TCGA_DLBC",
                 "TCGA_HNSC",
                 "TCGA_BRCA",
                 "TCGA_PAAD",
                 "TCGA_SKCM",
                 "TCGA_LUAD",
                 "TCGA_LUSC")
```

```{r}
df_phenotype
```
